declare -r PROJECT_SOURCE_CODE_C_VERSION_ROOT_DIRECTORY="$(realpath --no-symlinks "$PROJECT_SOURCE_CODE_ROOT_DIRECTORY/C version")"
declare SOURCE_CODE="$PROJECT_SOURCE_CODE_C_VERSION_ROOT_DIRECTORY/hello-gnu-gettext-world-c.c"

build_c_version(){
	#gcc -std=c90 -Wall -Wpedantic -D GNU_GETTEXT_I18N_READY -I "$PROJECT_SOURCE_CODE_ROOT_DIRECTORY/Common Code" -g -O0 -o "$(basename "$SOURCE_CODE" .c)" "$SOURCE_CODE"
	
	# Preprocessing
	gcc -E -D GNU_GETTEXT_I18N_READY -D SOFTWARE_NAME="\"$SOFTWARE_NAME\"" -D SOFTWARE_PATH_CONVERSION_FROM_EXECUTABLE_DIRECTORY_TO_RELEASE_ROOT_DIRECTORY="\"$SOFTWARE_PATH_CONVERSION_FROM_EXECUTABLE_DIRECTORY_TO_RELEASE_ROOT_DIRECTORY\"" -I "$PROJECT_SOURCE_CODE_ROOT_DIRECTORY/Common Code" -o "$BUILD_SOLUTION_DIRECTORY_INTERMEDIATE_BUILD_ARTIFACTS/$(basename "$SOURCE_CODE" .c).preprocessed.c" "$SOURCE_CODE"
	
	# Compilation
	gcc -S -o "$BUILD_SOLUTION_DIRECTORY_INTERMEDIATE_BUILD_ARTIFACTS/$(basename "$SOURCE_CODE" .c).s" "$BUILD_SOLUTION_DIRECTORY_INTERMEDIATE_BUILD_ARTIFACTS/$(basename "$SOURCE_CODE" .c).preprocessed.c"
	
	# Assemply
	gcc -c -o "$BUILD_SOLUTION_DIRECTORY_INTERMEDIATE_BUILD_ARTIFACTS/$(basename "$SOURCE_CODE" .c).o" "$BUILD_SOLUTION_DIRECTORY_INTERMEDIATE_BUILD_ARTIFACTS/$(basename "$SOURCE_CODE" .c).s"
	
	# Build BinReloc
	gcc -DENABLE_BINRELOC -c -o "$BUILD_SOLUTION_DIRECTORY_INTERMEDIATE_BUILD_ARTIFACTS/binreloc.o" "$PROJECT_SOURCE_CODE_ROOT_DIRECTORY/Common Code/binreloc.c"
	
	# Linking
	gcc -o "$BUILD_SOLUTION_DIRECTORY_INTERMEDIATE_BUILD_ARTIFACTS/$(basename "$SOURCE_CODE" .c)" "$BUILD_SOLUTION_DIRECTORY_INTERMEDIATE_BUILD_ARTIFACTS/$(basename "$SOURCE_CODE" .c).o" "$BUILD_SOLUTION_DIRECTORY_INTERMEDIATE_BUILD_ARTIFACTS/binreloc.o"
	
	# Linking(static)
	gcc -static -o "$BUILD_SOLUTION_DIRECTORY_INTERMEDIATE_BUILD_ARTIFACTS/$(basename "$SOURCE_CODE" .c).static" "$BUILD_SOLUTION_DIRECTORY_INTERMEDIATE_BUILD_ARTIFACTS/$(basename "$SOURCE_CODE" .c).o" "$BUILD_SOLUTION_DIRECTORY_INTERMEDIATE_BUILD_ARTIFACTS/binreloc.o"

	return
}
